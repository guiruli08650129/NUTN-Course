#include <stdlib.h>
#include <omp.h>
#include<stdio.h>
#include <time.h>
#include <Windows.h>
#define thread 4
#define SIZE 10

int main()
{
	double start, end;
	
	double *a = new double[SIZE];
	double *b = new double[SIZE];
	double *c = new double[SIZE];
	srand(time(NULL));

	for (int i = 0; i < SIZE; i++)
	{
		a[i] = (double)rand()/RAND_MAX;
		b[i] = (double)rand() / RAND_MAX;
		c[i] = 0.0;
	}

	start = clock();

#pragma omp parallel for schedule(guided) num_threads(thread)
	for (int i = 0; i < SIZE; i++)
	{
		c[i] = a[i] * b[i];
		printf("%lf %lf %lf \n", a[i], b[i], c[i]);
		//printf("Thread %d is doing iteration %d.\n", omp_get_thread_num, i);
	}
	printf("All done.\n");

	end = clock();
	printf("\nTotal time = %lf.\n",(end - start) / CLOCKS_PER_SEC);


	delete[] a;
	delete[] b;
	delete[] c;

	system("pause");
	return 0;

}